<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SHOPPING_MALL_SYSTEM.shoppingmall.mapper.ProductMapper">
    
    <resultMap id="ProductResultMap" type="SHOPPING_MALL_SYSTEM.shoppingmall.model.Product">
        <result property="product_id" column="product_id"/>
        <result property="user_id" column="user_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="price" column="price"/>
        <result property="stock" column="stock"/>
        <result property="created_at" column="created_at"/>
        <result property="modified_at" column="modified_at"/>
        <result property="deleted_at" column="deleted_at"/>
        <result property="status" column="status"/>
        <result property="image_url" column="image_url"/>
    </resultMap>

    <insert id="addProduct" parameterType="SHOPPING_MALL_SYSTEM.shoppingmall.model.Product">
        INSERT INTO Products(user_id, name, description, price, stock, image_url) 
        VALUES (#{user_id}, #{name}, #{description}, #{price}, #{stock}, #{image_url}) 
    </insert>

    <select id="getProductsByUserId" resultMap="ProductResultMap">
        SELECT product_id, user_id, name, description, price, stock, created_at, modified_at, deleted_at, status, image_url
        FROM Products
        WHERE user_id = #{user_id}
        ORDER BY created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countProductsByUserId" resultType="int">
        SELECT COUNT(*) 
        FROM Products 
        WHERE user_id = #{user_id}
    </select>
    
    <select id="getAllProducts" resultMap="ProductResultMap">
        SELECT product_id, name, description, price, stock, image_url
        FROM Products
        WHERE status = 'available' and deleted_at IS NULL and stock > 0
        ORDER BY created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countAllProducts" resultType="int">
        SELECT COUNT(*) 
        FROM Products 
        WHERE status = 'available' and deleted_at IS NULL
    </select>

    <update id="updateProduct" parameterType="SHOPPING_MALL_SYSTEM.shoppingmall.model.Product">
        UPDATE Products
        SET name = #{name}, description = #{description}, price = #{price}, stock = #{stock}, image_url = #{image_url}
        WHERE user_id = #{user_id} AND product_id = #{product_id}
    </update>

    <update id="deleteProduct" parameterType="map">
        UPDATE Products
        SET deleted_at = NOW(), status = 'deleted'
        WHERE user_id = #{user_id} AND product_id = #{product_id}
    </update>

    <select id="getProductNameById" parameterType="int" resultType="String">
        SELECT name 
        FROM Products 
        WHERE product_id = #{product_id}
    </select>

    <select id="getStockCount" resultType="int">
        SELECT stock
        FROM Products
        WHERE product_id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="updateProductStock">
        <foreach item="item" collection="list" separator=";">
            UPDATE Products
            SET stock = stock - #{item.quantity}
            WHERE product_id = #{item.product_id}
        </foreach>
    </update>
</mapper>