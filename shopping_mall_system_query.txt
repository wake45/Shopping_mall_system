CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY, -- 사용자 고유 ID
    username VARCHAR(50) UNIQUE NOT NULL, -- 사용자 이름 (고유)
    password VARCHAR(255) NOT NULL, -- 비밀번호
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP -- 생성 날짜
);

CREATE TABLE Products (
    product_id INT AUTO_INCREMENT PRIMARY KEY, -- 상품 고유 ID
    user_id INT, -- 판매자 ID (Users 테이블과 관계)
    name VARCHAR(100) NOT NULL, -- 상품 이름
    description TEXT, -- 상품 설명
    price DECIMAL(10, 2) NOT NULL, -- 가격
    stock INT NOT NULL, -- 재고 수량
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP, -- 생성 날짜
    modified_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 수정 날짜
    deleted_at DATETIME, -- 삭제 날짜 (soft delete 용)
    status ENUM('available', 'canceled') DEFAULT 'available', -- 상태
    image_url VARCHAR(255), -- 이미지 URL
    FOREIGN KEY (user_id) REFERENCES Users(user_id) -- Users 테이블과의 외래키
);


CREATE TABLE Orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY, -- 주문 고유 ID
    user_id INT, -- 사용자 ID (Users 테이블과 관계)
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP, -- 주문 날짜
    modified_date DATETIME, -- 완료,  취소, 환불 날짜
    total_amount DECIMAL(10, 2) NOT NULL, -- 총 금액
    total_price DECIMAL(10, 2) NOT NULL, -- 총 가격
    status ENUM('pending', 'completed', 'canceled', 'refunded') DEFAULT 'pending', -- 상태
    FOREIGN KEY (user_id) REFERENCES Users(user_id) -- Users 테이블과의 외래키
);

CREATE TABLE OrderItems (
    order_item_id INT AUTO_INCREMENT PRIMARY KEY, -- 주문 상품 고유 ID
    order_id INT, -- 주문 ID (Orders 테이블과 관계)
    product_id INT, -- 상품 ID (Products 테이블과 관계)
    quantity INT NOT NULL, -- 수량
    price DECIMAL(10, 2) NOT NULL, -- 상품 가격
    FOREIGN KEY (order_id) REFERENCES Orders(order_id) ON DELETE CASCADE, -- Orders 테이블과의 외래키
    FOREIGN KEY (product_id) REFERENCES Products(product_id) -- Products 테이블과의 외래키
);

-- Products 테이블 인덱스
CREATE INDEX idx_user_id ON Products(user_id);

-- Orders 테이블 인덱스
CREATE INDEX idx_order_user_id ON Orders(user_id);

-- OrderItems 테이블 인덱스
CREATE INDEX idx_order_item_order_id ON OrderItems(order_id);

